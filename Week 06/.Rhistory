knitr::opts_chunk$set(echo = TRUE)
f1 <- function(string, prefix) {
substr(string, 1, nchar(prefix)) == prefix
}
f2 <- function(x) {
if (length(x) <= 1) return(NULL)
x[-length(x)]
}
f3 <- function(x, y) {
rep(y, length.out = length(x))
}
f1("meow")
f1("meow", "woof")
f1("meow", "m")
f1("meow", "me")
f1("meow", "meow")
f1("meow", "meoww")
f1("meow2", "eow2")
?source
?print
print(rnorm)
getMethod(rnorm)
getMethod("rnorm")
rnorm
rnorm()
rnorm
showMethods("rnorm")
MASS::mvrnorm
rnorm
MASS::mvrnorm
rnorm
?rnorm
methods(rnorm)
rnorm()
rnorm
getAnywhere(rnorm)
?rnorm
?MASS::mvrnorm
?rnorm
head(mtcars)
lapply(mtcars, FUN = function(x) {sd(x, na.rm = T)/mean(x, na.rm = T)})
colnames(mtcars)
lapply(mtcars, function(x) {sd(x, na.rm = T)/mean(x, na.rm = T)})
str(mtcars)
#Part A
vapply(mtcars, sd)
#Part A
vapply(mtcars, FUN = sd)
#Part A
vapply(mtcars, FUN = sd, na.rm = T)
?vapply
#Part A
vapply(mtcars, FUN = sd, FUN.VALUE = numeric)
#Part A
vapply(mtcars, FUN = sd, FUN.VALUE = numeric())
#Part A
vapply(mtcars, FUN = sd, FUN.VALUE = numeric(length(mtcars)))
#Part A
vapply(mtcars, FUN = sd, FUN.VALUE = numeric)
?numeric
length(names(mtcars))
#Part A
vapply(mtcars, FUN = sd, FUN.VALUE = numeric(length(names(mtcars))))
#Part A
vapply(mtcars, FUN = sd, FUN.VALUE = numeric(1))
#Part B
vapply(mtcars, is.numeric, FUN.VALE = logical(1))
#Part B
vapply(mtcars, FUN= is.numeric, FUN.VALE = logical(1))
#Part B
vapply(mtcars, FUN= is.numeric, FUN.VALuE = logical(1))
#Part B
vapply(mtcars, FUN= is.numeric, FUN.VALUE = logical(1))
#Part A
vapply(mtcars, FUN = sd, FUN.VALUE = numeric(1))
#Part B
vapply( mtcars[,vapply(mtcars, FUN= is.numeric, FUN.VALUE = logical(1))], FUN = SD, FUN.VALUE = numeric(1))
#Part A
vapply(mtcars, FUN = sd, FUN.VALUE = numeric(1))
#Part B
vapply( mtcars[,vapply(mtcars, FUN= is.numeric, FUN.VALUE = logical(1))], FUN = sd, FUN.VALUE = numeric(1))
?iris
str(iris)
#Part B
vapply(iris[ ,vapply(iris, FUN= is.numeric, FUN.VALUE = logical(1))], FUN = sd, FUN.VALUE = numeric(1))
#Part A
vapply(mtcars, FUN = sd, FUN.VALUE = numeric(1))
#Part B
vapply(iris[ ,vapply(iris, FUN= is.numeric, FUN.VALUE = logical(1))], FUN = sd, FUN.VALUE = numeric(1))
